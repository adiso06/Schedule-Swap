name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build for GitHub Pages
        run: npm run build:gh-pages

      - name: Create .nojekyll file
        run: touch ./dist/.nojekyll

      - name: Create index.html in repository root for redirecting
        run: |
          # Create a root index.html that redirects to the app location
          cat > ./dist/index.html << EOF
          <!DOCTYPE html>
          <html>
            <head>
              <meta charset="utf-8">
              <title>Schedule Swap</title>
              <script>
                // Get the repository name dynamically
                var pathSegments = window.location.pathname.split('/');
                var repoName = pathSegments[1] || '';
                
                // Redirect to swap directory
                if (repoName) {
                  window.location.replace('/' + repoName + '/swap/');
                } else {
                  window.location.replace('/swap/');
                }
              </script>
            </head>
            <body>
              Redirecting to Schedule Swap application...
            </body>
          </html>
          EOF
          
          # Create swap directory
          mkdir -p ./dist/swap
          
          # Copy the build to the swap directory
          cp -r ./dist/*.* ./dist/swap/ 2>/dev/null || true
          cp -r ./dist/assets ./dist/swap/

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './dist'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4